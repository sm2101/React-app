[{"/home/sid/Documents/projects/React-app/client/src/index.js":"1","/home/sid/Documents/projects/React-app/client/src/App.js":"2","/home/sid/Documents/projects/React-app/client/src/reportWebVitals.js":"3","/home/sid/Documents/projects/React-app/client/src/components/layout/Navbar.js":"4","/home/sid/Documents/projects/React-app/client/src/components/layout/Footer.js":"5","/home/sid/Documents/projects/React-app/client/src/components/layout/Landing.js":"6","/home/sid/Documents/projects/React-app/client/src/components/auth/Register.js":"7","/home/sid/Documents/projects/React-app/client/src/components/auth/Login.js":"8","/home/sid/Documents/projects/React-app/client/src/store.js":"9","/home/sid/Documents/projects/React-app/client/src/reducers/index.js":"10","/home/sid/Documents/projects/React-app/client/src/reducers/authReducer.js":"11","/home/sid/Documents/projects/React-app/client/src/actions/authActions.js":"12","/home/sid/Documents/projects/React-app/client/src/actions/types.js":"13","/home/sid/Documents/projects/React-app/client/src/reducers/errorReducer.js":"14","/home/sid/Documents/projects/React-app/client/src/utils/setAuthToken.js":"15","/home/sid/Documents/projects/React-app/client/src/validation/isEmpty.js":"16","/home/sid/Documents/projects/React-app/client/src/components/common/TextFieldGroup.js":"17","/home/sid/Documents/projects/React-app/client/src/reducers/profileReducer.js":"18","/home/sid/Documents/projects/React-app/client/src/components/dashboard/Dashboard.js":"19","/home/sid/Documents/projects/React-app/client/src/actions/profileActions.js":"20"},{"size":500,"mtime":1607510259373,"results":"21","hashOfConfig":"22"},{"size":1770,"mtime":1608309427322,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1607510259373,"results":"24","hashOfConfig":"22"},{"size":3650,"mtime":1608299024293,"results":"25","hashOfConfig":"22"},{"size":234,"mtime":1607515922526,"results":"26","hashOfConfig":"22"},{"size":1380,"mtime":1608297463984,"results":"27","hashOfConfig":"22"},{"size":4644,"mtime":1608304617755,"results":"28","hashOfConfig":"22"},{"size":2902,"mtime":1608366171993,"results":"29","hashOfConfig":"22"},{"size":419,"mtime":1607597234204,"results":"30","hashOfConfig":"22"},{"size":280,"mtime":1608308247675,"results":"31","hashOfConfig":"22"},{"size":479,"mtime":1608234617053,"results":"32","hashOfConfig":"22"},{"size":1218,"mtime":1608299020741,"results":"33","hashOfConfig":"22"},{"size":301,"mtime":1608308576106,"results":"34","hashOfConfig":"22"},{"size":260,"mtime":1608219481987,"results":"35","hashOfConfig":"22"},{"size":250,"mtime":1608224633270,"results":"36","hashOfConfig":"22"},{"size":252,"mtime":1608234550282,"results":"37","hashOfConfig":"22"},{"size":1283,"mtime":1608304768233,"results":"38","hashOfConfig":"22"},{"size":534,"mtime":1608308989371,"results":"39","hashOfConfig":"22"},{"size":470,"mtime":1608309308711,"results":"40","hashOfConfig":"22"},{"size":543,"mtime":1608366294218,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"25lkau",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sid/Documents/projects/React-app/client/src/index.js",[],["90","91"],"/home/sid/Documents/projects/React-app/client/src/App.js",["92"],"import './App.css';\nimport React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Landing from './components/layout/Landing';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Dashboard from './components/dashboard/Dashboard';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { logoutUser, setCurrentUser} from './actions/authActions';\n\n\n// check token\nif(localStorage.jwtToken){\n    // set aut \n    setAuthToken(localStorage.jwtToken);\n    //  decode\n    const decoded = jwt_decode(localStorage.jwtToken);\n    store.dispatch(setCurrentUser(decoded));\n\n    // expired token\n    const currentTime = Date.now()/1000;\n    if(decoded.exp < currentTime){\n        store.dispatch(logoutUser());\n        window.location.href = '/';\n    }\n}\n\nfunction App(){\n        return ( \n            <Provider store = {store}>\n                <Router>\n                    <div className = \"App\" >\n                        <Navbar />\n                        <Route exact path = \"/\" component = {Landing} />\n                        <div className=\"container\">\n                        <Route exact path = \"/login\" component = {Login} />\n                        <Route exact path = \"/register\" component = {Register} />\n                        </div>\n                        <Route exact path = \"/dashboard\" component = {Dashboard} />\n                        <Footer />\n                    </div>\n                </Router>\n            </Provider>\n        );\n}\n\nexport default App;","/home/sid/Documents/projects/React-app/client/src/reportWebVitals.js",[],"/home/sid/Documents/projects/React-app/client/src/components/layout/Navbar.js",["93","94","95","96","97","98","99","100","101"],"import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Login from '../auth/Login';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { logoutUser} from '../../actions/authActions';\nclass Navbar extends Component {\n    onLogout(event){\n        event.preventDefault();\n        this.props.logoutUser();\n        \n    }\n    render() {\n        const {isAuthenticated, user} = this.props.auth;\n\n        const authLinks = (\n            <ul className = \"navbar-nav mb-2 mb-lg-0\">\n                <li className=\"nav-item dropdown\">\n                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                    {user.name}\n                </a>\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                    <li><a className=\"dropdown-item\" href=\"#\">Profile</a></li>\n                    <li><hr className=\"dropdown-divider\" /></li>\n                    <li><a \n                    onClick = {this.onLogout.bind(this)} \n                    className = ' nav-item dropdown-item'>\n                        Logout\n                    </a></li>\n                </ul>\n                </li>\n            </ul>\n        );\n        const guestLinks = (\n            <Login />\n        )\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\n                <div className=\"container-fluid\">\n                    <Link className=\"navbar-brand\" to = '/'>PotterHeads</Link>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"#\">Quizzez</a>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                Dropdown\n                            </a>\n                            <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\n                                <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\n                                <li><hr className=\"dropdown-divider\" /></li>\n                                <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\n                            </ul>\n                        </li>\n                        \n                    </ul>\n                    {isAuthenticated? authLinks : guestLinks}\n                    </div>\n                </div>\n                </nav>\n        )\n    }\n}\n\nNavbar.propTypes = {\n    logoutUser :PropTypes.func.isRequired,\n    auth : PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) =>({\n    auth:state.auth\n})\n\nexport default connect(mapStateToProps, {logoutUser})(Navbar);","/home/sid/Documents/projects/React-app/client/src/components/layout/Footer.js",[],"/home/sid/Documents/projects/React-app/client/src/components/layout/Landing.js",[],"/home/sid/Documents/projects/React-app/client/src/components/auth/Register.js",["102"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {withRouter} from 'react-router-dom';\nimport classnames from 'classnames';\nimport {connect} from 'react-redux';\nimport {registerUser} from '../../actions/authActions';\nimport TextFieldGroup from '../common/TextFieldGroup';\nclass Register extends Component {\n    constructor(){\n        super();\n        this.state = {\n            name:'',\n            email :'',\n            password:'',\n            password2:'',\n            errors:{}\n        }\n        this.handleChange  = this.handleChange.bind(this);\n        this.handleSubmit  = this.handleSubmit.bind(this);\n    }\n    componentDidMount(){\n        if(this.props.auth.isAuthenticated){\n            this.props.history.push('/dashboard');\n        }\n    }\n\ncomponentWillReceiveProps(nextProps){\n    if(nextProps.errors){\n        this.setState({errors:nextProps.errors})\n    }\n}\nhandleChange(event){\n        this.setState({\n            [event.target.name]:event.target.value\n        })\n}\nhandleSubmit(event){\n    event.preventDefault();\n    const newUser = {\n        name:this.state.name,\n        email:this.state.email,\n        password:this.state.password,\n        password2:this.state.password2\n    }\n    this.props.registerUser(newUser, this.props.history);\n}\n\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n            <div className = 'register h-100'>\n                <div className=\"container-fluid m-0 p-0 h-100\">\n                    <div className=\"row align-items-center h-100\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">\n                                Register\n                            </h1>\n                            <p className=\"lead text-center\">\n                                Create your potterhead account\n                            </p>\n                            <form>\n                                <TextFieldGroup \n                                placeholder = \"Name\"\n                                name = \"name\"\n                                type = \"text\"\n                                value = {this.state.name}\n                                onChange = {this.handleChange}\n                                error = {errors.name}\n                                label = 'Name'\n                                />\n                                <TextFieldGroup \n                                placeholder = \"Email\"\n                                name = \"email\"\n                                type = \"email\"\n                                value = {this.state.email}\n                                onChange = {this.handleChange}\n                                error = {errors.email}\n                                label = 'Email'\n                                />\n                                <TextFieldGroup \n                                placeholder = \"Password\"\n                                name = \"password\"\n                                type = \"password\"\n                                value = {this.state.password}\n                                onChange = {this.handleChange}\n                                error = {errors.password}\n                                label = 'Password'\n                                />\n                                <TextFieldGroup \n                                placeholder = \"Confirm Password\"\n                                name = \"password2\"\n                                type = \"password\"\n                                value = {this.state.password2}\n                                onChange = {this.handleChange}\n                                error = {errors.password2}\n                                label = 'Confirm Password'\n                                />\n                                \n                                <input \n                                type = \"submit\" \n                                className = \"btn btn-secondary w-100 form-control\" \n                                value = \"Get sorted ->\"  \n                                onClick = {this.handleSubmit}\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n    registerUser :PropTypes.func.isRequired,\n    auth:PropTypes.object.isRequired,\n    errors:PropTypes.object.isRequired\n}\nconst mapStatetoProps = (state) =>({\n    auth:state.auth,\n    errors:state.errors\n})\nexport default connect(mapStatetoProps,{ registerUser})(withRouter(Register));","/home/sid/Documents/projects/React-app/client/src/components/auth/Login.js",["103"],"/home/sid/Documents/projects/React-app/client/src/store.js",[],"/home/sid/Documents/projects/React-app/client/src/reducers/index.js",[],"/home/sid/Documents/projects/React-app/client/src/reducers/authReducer.js",["104"],"import { SET_CURRENT_USER} from '../actions/types';\nimport isEmpty from '../validation/isEmpty';\nconst initialState = {\n    isAuthenticated:false,\n    user:{}\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated:!isEmpty(action.payload),\n                user :action.payload\n            }\n        default:\n            return state;\n    }\n}","/home/sid/Documents/projects/React-app/client/src/actions/authActions.js",[],"/home/sid/Documents/projects/React-app/client/src/actions/types.js",[],"/home/sid/Documents/projects/React-app/client/src/reducers/errorReducer.js",["105"],"import {GET_ERRORS} from '../actions/types';\nconst initialState = {}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","/home/sid/Documents/projects/React-app/client/src/utils/setAuthToken.js",[],"/home/sid/Documents/projects/React-app/client/src/validation/isEmpty.js",[],"/home/sid/Documents/projects/React-app/client/src/components/common/TextFieldGroup.js",[],"/home/sid/Documents/projects/React-app/client/src/reducers/profileReducer.js",["106"],"import { GET_PROFILE, PROFILE_LOADING} from '../actions/types';\n\nconst inittialState = {\n    profile:null,\n    loading:false\n}\n\nexport default function(state = inittialState, action){\n    switch(action.type){\n        case PROFILE_LOADING:\n            return{\n                ...state,\n                loading:true\n            }\n        case GET_PROFILE:\n            return{\n                ...state,\n                profile:action.payload,\n                loading:false\n            }\n        default:\n            return state;\n    }\n}","/home/sid/Documents/projects/React-app/client/src/components/dashboard/Dashboard.js",["107"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {getCurrentProfile} from '../../actions/profileActions';\nclass Dashboard extends Component {\n    componentDidMount(){\n        this.props.getCurrentProfile();\n    }\n    render() {\n        return (\n            <div>\n                <h1>Dashboard</h1>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, {getCurrentProfile})(Dashboard);","/home/sid/Documents/projects/React-app/client/src/actions/profileActions.js",["108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":2,"column":17,"nodeType":"115","messageId":"116","endLine":2,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":19,"column":17,"nodeType":"119","endLine":19,"endColumn":148},{"ruleId":"117","severity":1,"message":"118","line":23,"column":25,"nodeType":"119","endLine":23,"endColumn":63},{"ruleId":"117","severity":1,"message":"120","line":25,"column":25,"nodeType":"119","endLine":27,"endColumn":59},{"ruleId":"117","severity":1,"message":"118","line":47,"column":29,"nodeType":"119","endLine":47,"endColumn":89},{"ruleId":"117","severity":1,"message":"118","line":50,"column":29,"nodeType":"119","endLine":50,"endColumn":62},{"ruleId":"117","severity":1,"message":"118","line":53,"column":29,"nodeType":"119","endLine":53,"endColumn":160},{"ruleId":"117","severity":1,"message":"118","line":57,"column":37,"nodeType":"119","endLine":57,"endColumn":75},{"ruleId":"117","severity":1,"message":"118","line":58,"column":37,"nodeType":"119","endLine":58,"endColumn":75},{"ruleId":"117","severity":1,"message":"118","line":60,"column":37,"nodeType":"119","endLine":60,"endColumn":75},{"ruleId":"113","severity":1,"message":"121","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":18},{"ruleId":"113","severity":1,"message":"121","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":8,"column":1,"nodeType":"124","endLine":19,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":4,"column":1,"nodeType":"124","endLine":11,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":8,"column":1,"nodeType":"124","endLine":24,"endColumn":2},{"ruleId":"113","severity":1,"message":"125","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":17},{"ruleId":"113","severity":1,"message":"126","line":3,"column":39,"nodeType":"115","messageId":"116","endLine":3,"endColumn":49},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'classnames' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'PropTypes' is defined but never used.","'GET_ERRORS' is defined but never used.","no-global-assign","no-unsafe-negation"]